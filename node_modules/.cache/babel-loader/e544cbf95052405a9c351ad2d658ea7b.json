{"ast":null,"code":"var _jsxFileName = \"/Users/samiksharana/Downloads/book-movie-app/src/common/header/Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Header.css\";\nimport logo from \"../../assets/logo.svg\";\nimport { Button, Paper, Tabs, Tab, FormControl, InputLabel, Input, FormHelperText } from \"@material-ui/core\";\nimport Modal from \"react-modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = props => {\n  _s();\n\n  const [loginModelState, setOpen] = useState(false);\n  const [value, setVal] = useState(0);\n  const [sessionLogged, setSessionState] = useState(sessionStorage.getItem(\"access-token\") == null ? false : true); //Login \n\n  const [username, setUserName] = useState([]);\n  const [password, setPassword] = useState([]); //Register\n\n  const [firstname, setFirstName] = useState([]);\n  const [lastname, setLastName] = useState([]);\n  const [email, setEmail] = useState([]);\n  const [regPassword, setRegPassword] = useState([]);\n  const [contact, setContact] = useState([]); //Required helper text - set classname \n\n  const [unameReq, setCNameForUname] = useState(\"noneClass\");\n  const [passwordReq, setCNameforPassword] = useState(\"noneClass\");\n  const [fnameReq, setCNameforFName] = useState(\"noneClass\");\n  const [lnameReq, setCNameforLName] = useState(\"noneClass\");\n  const [emailReq, setCNameforEmail] = useState(\"noneClass\");\n  const [regPasswordReq, setCNameforRegPassword] = useState(\"noneClass\");\n  const [contactReq, setCNameforContact] = useState(\"noneClass\");\n  const [loginSuccess, setLoginSuccess] = useState([]);\n  const [registerSuccess, setRegisterSuccess] = useState([]);\n\n  const tabsHandler = (e, val) => {\n    //console.warn(val)\n    setVal(val);\n  };\n\n  const logoutSessionHandler = e => {\n    sessionStorage.removeItem(\"uuid\");\n    sessionStorage.removeItem(\"access-token\");\n    setSessionState(false);\n  };\n\n  const directToBookShowPage = id => {\n    props.history.push('/bookshow/' + id);\n  };\n\n  const openPopupModalHandler = () => {\n    setOpen(true);\n    setUserName(\"\");\n    setPassword(\"\");\n    setFirstName(\"\");\n    setLastName(\"\");\n    setEmail(\"\");\n    setRegPassword(\"\");\n    setContact(\"\");\n    setCNameForUname(\"noneClass\");\n    setCNameforPassword(\"noneClass\");\n    setCNameforFName(\"noneClass\");\n    setCNameforLName(\"noneClass\");\n    setCNameforEmail(\"noneClass\");\n    setCNameforRegPassword(\"noneClass\");\n    setCNameforContact(\"noneClass\");\n  };\n\n  const closePopupModalHandler = () => {\n    setOpen(false);\n    setUserName(\"\");\n    setPassword(\"\");\n    setFirstName(\"\");\n    setLastName(\"\");\n    setEmail(\"\");\n    setRegPassword(\"\");\n    setContact(\"\");\n    setCNameForUname(\"noneClass\");\n    setCNameforPassword(\"noneClass\");\n    setCNameforFName(\"noneClass\");\n    setCNameforLName(\"noneClass\");\n    setCNameforEmail(\"noneClass\");\n    setCNameforRegPassword(\"noneClass\");\n    setCNameforContact(\"noneClass\");\n  };\n\n  const userNameHandler = e => {\n    setUserName(e.target.value);\n  };\n\n  const passwordChangeHandler = e => {\n    setPassword(e.target.value);\n  };\n\n  const firstNameHandler = e => {\n    setFirstName(e.target.value);\n  };\n\n  const lastNameHandler = e => {\n    setLastName(e.target.value);\n  };\n\n  const emailHandler = e => {\n    setEmail(e.target.value);\n  };\n\n  const regPasswordHandler = e => {\n    setRegPassword(e.target.value);\n  };\n\n  const contactHandler = e => {\n    setContact(e.target.value);\n  };\n\n  const loginAuthenticationHandler = () => {\n    let data = null;\n    username === \"\" ? setCNameForUname(\"blockClass\") : setCNameForUname(\"noneClass\"); //console.log(unameReq)\n\n    password === \"\" ? setCNameforPassword(\"blockClass\") : setCNameforPassword(\"noneClass\");\n\n    if (username != null && username != \"\" && password != null && password != \"\") {\n      const loginParameters = window.btoa(`{username}:{password}`);\n      fetch(\"/api/v1/auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Cache-Control\": \"no-cache\",\n          Authorization: \"Basic \" + loginParameters\n        },\n        body: data\n      }).then(response => response.json()).then(data => {\n        if (data.message != null || data.message != \"\") {\n          setLoginSuccess(false);\n        } else {\n          closePopupModalHandler();\n          setUserName(\"\");\n          setPassword(\"\");\n          sessionStorage.setItem(\"access-token\", response.headers.get(\"access-token\"));\n          setLoginSuccess(true);\n        }\n      });\n    }\n  };\n\n  const registerUserHandler = () => {\n    firstname === \"\" ? setCNameforFName(\"blockClass\") : setCNameforFName(\"noneClass\");\n    lastname === \"\" ? setCNameforLName(\"blockClass\") : setCNameforLName(\"noneClass\");\n    email === \"\" ? setCNameforEmail(\"blockClass\") : setCNameforEmail(\"noneClass\");\n    regPassword === \"\" ? setCNameforRegPassword(\"blockClass\") : setCNameforRegPassword(\"noneClass\");\n    contact === \"\" ? setCNameforContact(\"blockClass\") : setCNameforContact(\"noneClass\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"logo\",\n      className: \"app-logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }, this), sessionLogged == false ? /*#__PURE__*/_jsxDEV(Button, {\n      className: \"headerButton\",\n      variant: \"contained\",\n      onClick: openPopupModalHandler,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 43\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      className: \"headerButton\",\n      variant: \"contained\",\n      onClick: logoutSessionHandler,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 22\n    }, this), sessionLogged == false && props.isDetailsPage === \"true\" ? /*#__PURE__*/_jsxDEV(Button, {\n      className: \"headerButton\",\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => setOpen(!loginModelState),\n      children: \"Book Show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 21\n    }, this) : \"\", sessionLogged == true && props.isDetailsPage === \"true\" ? /*#__PURE__*/_jsxDEV(Button, {\n      className: \"headerButton\",\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => directToBookShowPage(props.id),\n      children: \"Book Show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: loginModelState,\n      className: \"modal\",\n      onRequestClose: closePopupModalHandler,\n      ariaHideApp: false,\n      children: [/*#__PURE__*/_jsxDEV(Tabs, {\n        textColor: \"secondary\",\n        indicatorColor: \"secondary\",\n        value: value,\n        onChange: tabsHandler,\n        children: [\"//default tab login\", /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"LOGIN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"REGISTER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: value,\n        index: 0,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"formC\",\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"username\",\n            type: \"text\",\n            username: username,\n            onChange: userNameHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            className: unameReq,\n            children: \"required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"formC\",\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"password\",\n            type: \"password\",\n            password: password,\n            onChange: passwordChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            className: passwordReq,\n            children: \"required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), !loginSuccess ? /*#__PURE__*/_jsxDEV(FormControl, {\n          children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: \"Unsuccessful Login Attempt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"modalButton\",\n          color: \"primary\",\n          variant: \"contained\",\n          onClick: loginAuthenticationHandler,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: value,\n        index: 1,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"formC\",\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"firstname\",\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"firstname\",\n            type: \"text\",\n            firstname: firstname,\n            onChange: firstNameHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            className: fnameReq,\n            children: \"required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"formC\",\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"lastname\",\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"lastname\",\n            type: \"text\",\n            lastname: lastname,\n            onChange: lastNameHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            className: lnameReq,\n            children: \"required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"formC\",\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"email\",\n            type: \"email\",\n            email: email,\n            onChange: emailHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            className: emailReq,\n            children: \"required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"formC\",\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"regPassword\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"regPassword\",\n            type: \"password\",\n            regpassword: regPassword,\n            onChange: regPasswordHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            className: regPasswordReq,\n            children: \"required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"formC\",\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"contact\",\n            children: \"Contact No.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"contact\",\n            type: \"text\",\n            contact: contact,\n            onChange: contactHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            className: contactReq,\n            children: \"required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"modalButton\",\n          color: \"primary\",\n          variant: \"contained\",\n          onClick: registerUserHandler,\n          children: \"REGISTER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Header, \"fcY/3lFIxXYFfLNQIqB9bCpIt9k=\");\n\n_c = Header;\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index\n  } = props; //console.log(value,index,children)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: value === index && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 12\n  }, this);\n}\n\n_c2 = TabPanel;\nexport default Header;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"TabPanel\");","map":{"version":3,"sources":["/Users/samiksharana/Downloads/book-movie-app/src/common/header/Header.js"],"names":["React","useState","Button","Paper","Tabs","Tab","FormControl","InputLabel","Input","FormHelperText","Modal","Header","props","loginModelState","setOpen","value","setVal","sessionLogged","setSessionState","sessionStorage","getItem","username","setUserName","password","setPassword","firstname","setFirstName","lastname","setLastName","email","setEmail","regPassword","setRegPassword","contact","setContact","unameReq","setCNameForUname","passwordReq","setCNameforPassword","fnameReq","setCNameforFName","lnameReq","setCNameforLName","emailReq","setCNameforEmail","regPasswordReq","setCNameforRegPassword","contactReq","setCNameforContact","loginSuccess","setLoginSuccess","registerSuccess","setRegisterSuccess","tabsHandler","e","val","logoutSessionHandler","removeItem","directToBookShowPage","id","history","push","openPopupModalHandler","closePopupModalHandler","userNameHandler","target","passwordChangeHandler","firstNameHandler","lastNameHandler","emailHandler","regPasswordHandler","contactHandler","loginAuthenticationHandler","data","loginParameters","window","btoa","fetch","method","headers","Authorization","body","then","response","json","message","setItem","get","registerUserHandler","logo","isDetailsPage","TabPanel","children","index"],"mappings":"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","sourcesContent":["import React,{ useState } from \"react\";\nimport \"./Header.css\"\nimport logo from \"../../assets/logo.svg\"\nimport {Button,Paper,Tabs,Tab,FormControl,InputLabel,Input, FormHelperText} from \"@material-ui/core\"\nimport Modal from \"react-modal\"\n\nconst Header = (props) =>{ \n\n        const [loginModelState,setOpen] = useState(false);\n        const [value,setVal] =useState(0);\n        const [sessionLogged, setSessionState] = useState(sessionStorage.getItem(\"access-token\")== null ? false : true);\n\n        //Login \n        const [username, setUserName] = useState([]);\n        const [password, setPassword] = useState([]);\n\n        //Register\n        const [firstname, setFirstName] = useState([]);\n        const [lastname, setLastName] = useState([]);\n        const [email, setEmail] = useState([]);\n        const [regPassword, setRegPassword] = useState([]);\n        const [contact, setContact] = useState([]);\n\n        //Required helper text - set classname \n        const [unameReq, setCNameForUname] = useState(\"noneClass\");\n        const [passwordReq, setCNameforPassword] = useState(\"noneClass\");\n        const [fnameReq, setCNameforFName ] =useState(\"noneClass\");\n        const [lnameReq, setCNameforLName] = useState(\"noneClass\");\n        const [emailReq, setCNameforEmail] = useState(\"noneClass\");\n        const [regPasswordReq, setCNameforRegPassword] = useState(\"noneClass\");\n        const [contactReq, setCNameforContact] = useState(\"noneClass\");\n\n        const [loginSuccess, setLoginSuccess] = useState([]);\n        const [registerSuccess, setRegisterSuccess] = useState([]);\n\n        const tabsHandler = (e,val) => {\n            //console.warn(val)\n            setVal(val);\n        }\n\n        const logoutSessionHandler = (e) => {\n            sessionStorage.removeItem(\"uuid\");\n            sessionStorage.removeItem(\"access-token\");\n            setSessionState(false);\n        }\n\n        const directToBookShowPage = (id) => {\n            props.history.push('/bookshow/' + id);\n        }\n\n        const openPopupModalHandler = () => {\n            setOpen(true);\n            setUserName(\"\");\n            setPassword(\"\");\n            setFirstName(\"\");\n            setLastName(\"\");\n            setEmail(\"\");\n            setRegPassword(\"\");\n            setContact(\"\");\n\n            setCNameForUname(\"noneClass\");\n            setCNameforPassword(\"noneClass\");\n            setCNameforFName(\"noneClass\");\n            setCNameforLName(\"noneClass\");\n            setCNameforEmail(\"noneClass\");\n            setCNameforRegPassword(\"noneClass\");\n            setCNameforContact(\"noneClass\");\n\n        }\n\n        const closePopupModalHandler = () => {\n            setOpen(false);\n            setUserName(\"\");\n            setPassword(\"\");\n            setFirstName(\"\");\n            setLastName(\"\");\n            setEmail(\"\");\n            setRegPassword(\"\");\n            setContact(\"\");\n\n            setCNameForUname(\"noneClass\");\n            setCNameforPassword(\"noneClass\");\n            setCNameforFName(\"noneClass\");\n            setCNameforLName(\"noneClass\");\n            setCNameforEmail(\"noneClass\");\n            setCNameforRegPassword(\"noneClass\");\n            setCNameforContact(\"noneClass\");\n        }\n\n        const  userNameHandler = (e) => {\n            setUserName( e.target.value);\n        }\n\n        const passwordChangeHandler = (e) => {\n            setPassword(e.target.value);\n        }\n\n        const firstNameHandler = (e) => {\n            setFirstName( e.target.value);\n        }\n\n        const lastNameHandler = (e) => {\n            setLastName( e.target.value);\n        }\n\n        const emailHandler = (e) => {\n            setEmail( e.target.value);\n        }\n\n        const regPasswordHandler = (e) => {\n            setRegPassword( e.target.value);\n        }\n\n        const contactHandler = (e) => {\n            setContact( e.target.value);\n        }\n\n        const loginAuthenticationHandler = () => {\n            let data = null;\n            \n            username === \"\" ? setCNameForUname(\"blockClass\") : setCNameForUname(\"noneClass\");\n            //console.log(unameReq)\n            password === \"\" ? setCNameforPassword(\"blockClass\") : setCNameforPassword(\"noneClass\");\n\n            if(username!=null && username!=\"\" && password!=null && password!=\"\"){\n                const loginParameters = window.btoa(`{username}:{password}`);\n                fetch(\"/api/v1/auth/login\",{\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"Cache-Control\": \"no-cache\",\n                        Authorization: \"Basic \" + loginParameters\n\n                    },\n                    body: data,\n                }).then((response) => response.json()).then((data) => {\n                    if(data.message!=null || data.message!=\"\"){\n                        setLoginSuccess(false);\n                    }else{\n                        closePopupModalHandler();\n                        setUserName(\"\");\n                        setPassword(\"\");\n                        sessionStorage.setItem(\"access-token\",response.headers.get(\"access-token\"));\n                        setLoginSuccess(true);\n                    }\n                })\n            }\n        }\n\n        const registerUserHandler = () => {\n            firstname === \"\" ? setCNameforFName(\"blockClass\" ) : setCNameforFName(\"noneClass\");\n            lastname === \"\" ? setCNameforLName(\"blockClass\") : setCNameforLName(\"noneClass\");\n            email === \"\" ? setCNameforEmail(\"blockClass\") : setCNameforEmail(\"noneClass\");\n            regPassword === \"\" ? setCNameforRegPassword(\"blockClass\") : setCNameforRegPassword(\"noneClass\");\n            contact === \"\" ? setCNameforContact(\"blockClass\") : setCNameforContact(\"noneClass\");\n        }\n\n        return(\n            <div className=\"header\">\n                <img src={logo} alt=\"logo\" className=\"app-logo\"/>\n                {(sessionLogged==false) ? <Button className=\"headerButton\" variant=\"contained\" onClick={openPopupModalHandler}>Login</Button>\n                   : <Button className=\"headerButton\" variant=\"contained\" onClick={logoutSessionHandler}>Logout</Button>\n                }\n                \n                {\n                    (sessionLogged==false && props.isDetailsPage===\"true\") ?\n                    <Button className=\"headerButton\" variant=\"contained\" color=\"primary\" onClick={() => setOpen(!loginModelState)}>Book Show</Button> : \"\"\n                }\n\n                {\n                    (sessionLogged==true && props.isDetailsPage===\"true\") ?\n                    <Button className=\"headerButton\" variant=\"contained\" color=\"primary\" onClick={() => directToBookShowPage(props.id)}>Book Show</Button> : \"\"\n                }\n\n                <Modal isOpen={loginModelState} className=\"modal\" onRequestClose={closePopupModalHandler} ariaHideApp={false}>\n                        <Tabs textColor=\"secondary\" indicatorColor=\"secondary\" value={value} onChange={tabsHandler}>//default tab login\n                            <Tab label=\"LOGIN\" />\n                            <Tab label=\"REGISTER\" />\n                        </Tabs>\n\n                    <TabPanel value={value} index={0}>\n                    <FormControl className=\"formC\" required>\n                        <InputLabel htmlFor=\"username\">Username</InputLabel>\n                        <Input id=\"username\" type=\"text\" username={username} onChange={userNameHandler}/>\n                        <FormHelperText className={unameReq}>required</FormHelperText>\n                    </FormControl>\n                    <br/>\n                    \n                    <FormControl className=\"formC\" required>\n                        <InputLabel htmlFor=\"password\">Password</InputLabel>\n                        <Input id=\"password\" type=\"password\" password={password} onChange={passwordChangeHandler}/>\n                        <FormHelperText className={passwordReq}>required</FormHelperText>\n                    </FormControl>\n                    <br/>\n                    \n                    {!loginSuccess ? \n                        <FormControl>\n                            <FormHelperText>Unsuccessful Login Attempt</FormHelperText>\n                        </FormControl>:\"\"\n                    }\n                    <br/>\n                    <Button className=\"modalButton\" color=\"primary\" variant=\"contained\" onClick={loginAuthenticationHandler}>Login</Button>\n                    </TabPanel>\n\n                    <TabPanel value={value} index={1}>\n                    <FormControl className=\"formC\" required>\n                        <InputLabel htmlFor=\"firstname\">First Name</InputLabel>\n                        <Input id=\"firstname\" type=\"text\" firstname={firstname} onChange={firstNameHandler}/>\n                        <FormHelperText className={fnameReq}>required</FormHelperText>\n                    </FormControl>\n                    <br/>\n                    <FormControl className=\"formC\" required>\n                        <InputLabel htmlFor=\"lastname\">Last Name</InputLabel>\n                        <Input id=\"lastname\" type=\"text\" lastname={lastname} onChange={lastNameHandler}/>\n                        <FormHelperText className={lnameReq}>required</FormHelperText>\n                    </FormControl>\n                    <br/>\n                    <FormControl className=\"formC\" required>\n                        <InputLabel htmlFor=\"email\">Email</InputLabel>\n                        <Input id=\"email\" type=\"email\" email={email} onChange={emailHandler}/>\n                        <FormHelperText className={emailReq}>required</FormHelperText>\n                    </FormControl>\n                    <br/>\n                    <FormControl className=\"formC\" required>\n                        <InputLabel htmlFor=\"regPassword\">Password</InputLabel>\n                        <Input id=\"regPassword\" type=\"password\" regpassword={regPassword} onChange={regPasswordHandler}/>\n                        <FormHelperText className={regPasswordReq}>required</FormHelperText>\n                    </FormControl>\n                    <br/>\n                    <FormControl className=\"formC\" required>\n                        <InputLabel htmlFor=\"contact\">Contact No.</InputLabel>\n                        <Input id=\"contact\" type=\"text\" contact={contact} onChange={contactHandler}/>\n                        <FormHelperText className={contactReq}>required</FormHelperText>\n                    </FormControl>\n                    <br/>\n                    <br/>\n                    <Button className=\"modalButton\" color=\"primary\" variant=\"contained\" onClick={registerUserHandler}>REGISTER</Button>\n                    \n                    </TabPanel>\n                </Modal>\n            </div>\n        )\n    }\n\nfunction TabPanel(props){\n    const {children,value,index} = props;\n    //console.log(value,index,children)\n    return(<div>\n        {value===index && (\n            <h1>{children}</h1>\n        )}\n    </div>)\n}\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}