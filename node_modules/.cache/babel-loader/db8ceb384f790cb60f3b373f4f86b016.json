{"ast":null,"code":"var _jsxFileName = \"/Users/samiksharana/Downloads/book-movie-app/src/common/header/Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Header.css\";\nimport logo from \"../../assets/logo.svg\";\nimport { Button, Paper, Tabs, Tab, FormControl, InputLabel, Input, FormHelperText, Typography } from \"@material-ui/core\";\nimport Modal from \"react-modal\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = props => {\n  _s();\n\n  const [loginModelState, setOpen] = useState(false);\n  const [value, setVal] = useState(0);\n  const [sessionLogged, setSessionState] = useState(sessionStorage.getItem(\"access-token\") == null ? false : true); //Login \n\n  const [username, setUserName] = useState([]);\n  const [logpassword, setPassword] = useState([]); //Register\n\n  const [firstname, setFirstName] = useState([]);\n  const [lastname, setLastName] = useState([]);\n  const [email, setEmail] = useState([]);\n  const [regPassword, setRegPassword] = useState([]);\n  const [contact, setContact] = useState([]); //Required helper text - set classname \n\n  const [unameReq, setCNameForUname] = useState(\"noneClass\");\n  const [passwordReq, setCNameforPassword] = useState(\"noneClass\");\n  const [fnameReq, setCNameforFName] = useState(\"noneClass\");\n  const [lnameReq, setCNameforLName] = useState(\"noneClass\");\n  const [emailReq, setCNameforEmail] = useState(\"noneClass\");\n  const [regPasswordReq, setCNameforRegPassword] = useState(\"noneClass\");\n  const [contactReq, setCNameforContact] = useState(\"noneClass\");\n  const [loginSuccess, setLoginSuccess] = useState([0]);\n  const [registerSuccess, setRegisterSuccess] = useState([0]);\n\n  const tabsHandler = (e, val) => {\n    //console.warn(val)\n    setVal(val);\n  };\n\n  const logoutSessionHandler = e => {\n    sessionStorage.removeItem(\"uuid\");\n    sessionStorage.removeItem(\"access-token\");\n    setSessionState(false);\n  }; // const directToBookShowPage = (id) => {\n  //     props.history.push('/bookshow/' + id);\n  // }\n\n\n  const openPopupModalHandler = () => {\n    setOpen(true);\n    setUserName(\"\");\n    setPassword(\"\");\n    setFirstName(\"\");\n    setLastName(\"\");\n    setEmail(\"\");\n    setRegPassword(\"\");\n    setContact(\"\");\n    setCNameForUname(\"noneClass\");\n    setCNameforPassword(\"noneClass\");\n    setCNameforFName(\"noneClass\");\n    setCNameforLName(\"noneClass\");\n    setCNameforEmail(\"noneClass\");\n    setCNameforRegPassword(\"noneClass\");\n    setCNameforContact(\"noneClass\");\n    setLoginSuccess(0);\n    setRegisterSuccess(0);\n  };\n\n  const closePopupModalHandler = () => {\n    setOpen(false);\n    setUserName(\"\");\n    setPassword(\"\");\n    setFirstName(\"\");\n    setLastName(\"\");\n    setEmail(\"\");\n    setRegPassword(\"\");\n    setContact(\"\");\n    setCNameForUname(\"noneClass\");\n    setCNameforPassword(\"noneClass\");\n    setCNameforFName(\"noneClass\");\n    setCNameforLName(\"noneClass\");\n    setCNameforEmail(\"noneClass\");\n    setCNameforRegPassword(\"noneClass\");\n    setCNameforContact(\"noneClass\");\n    setLoginSuccess(0);\n    setRegisterSuccess(0);\n  };\n\n  const userNameHandler = e => {\n    setUserName(e.target.value);\n  };\n\n  const passwordChangeHandler = e => {\n    setPassword(e.target.value);\n  };\n\n  const firstNameHandler = e => {\n    setFirstName(e.target.value);\n  };\n\n  const lastNameHandler = e => {\n    setLastName(e.target.value);\n  };\n\n  const emailHandler = e => {\n    setEmail(e.target.value);\n  };\n\n  const regPasswordHandler = e => {\n    setRegPassword(e.target.value);\n  };\n\n  const contactHandler = e => {\n    setContact(e.target.value);\n  };\n\n  const loginAuthenticationHandler = e => {\n    let dataLog = null;\n    username === \"\" ? setCNameForUname(\"blockClass\") : setCNameForUname(\"noneClass\"); //console.log(unameReq)\n\n    logpassword === \"\" ? setCNameforPassword(\"blockClass\") : setCNameforPassword(\"noneClass\");\n\n    if (username != null && username != \"\" && logpassword != null && logpassword != \"\") {\n      e.preventDefault(); //const loginParameters = window.btoa(username + \":\" + password);\n\n      console.log(window.btoa(logpassword));\n      fetch(props.baseUrl + \"auth/login\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-type\": \"application/json; charset=UTF-8\",\n          Authorization: \"Basic \" + window.btoa(username + \":\" + logpassword)\n        },\n        body: dataLog\n      }).then(async response => response.json()).then(data => {\n        if (!data.message) {\n          closePopupModalHandler();\n          setUserName(\"\");\n          setPassword(\"\");\n          sessionStorage.setItem(\"access-token\", data.id);\n          setLoginSuccess(2);\n        } else {\n          setLoginSuccess(1);\n        }\n      }).catch(error => {\n        alert(error);\n      });\n    }\n  };\n\n  const registerUserHandler = async e => {\n    firstname === \"\" ? setCNameforFName(\"blockClass\") : setCNameforFName(\"noneClass\");\n    lastname === \"\" ? setCNameforLName(\"blockClass\") : setCNameforLName(\"noneClass\");\n    email === \"\" ? setCNameforEmail(\"blockClass\") : setCNameforEmail(\"noneClass\");\n    regPassword === \"\" ? setCNameforRegPassword(\"blockClass\") : setCNameforRegPassword(\"noneClass\");\n    contact === \"\" ? setCNameforContact(\"blockClass\") : setCNameforContact(\"noneClass\");\n\n    if (firstname != \"\" && firstname != null && lastname != \"\" && lastname != null && email != \"\" && email != null && regPassword != \"\" && regPassword != null && contact != \"\" && contact != null) {\n      let registerData = JSON.stringify({\n        email_address: email,\n        first_name: firstname,\n        last_name: lastname,\n        mobile_number: contact,\n        password: regPassword\n      });\n      console.log(registerData);\n      e.preventDefault();\n      fetch(props.baseUrl + \"signup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: registerData\n      }).then(response => response.json()).then(data => {\n        if (!data.message) {\n          setRegisterSuccess(2); //console.log(data.message);\n        } else {\n          setRegisterSuccess(1);\n          console.log(data.message);\n        }\n      }).catch(error => {\n        alert(error);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"logo\",\n      className: \"app-logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }, this), sessionLogged == false ? /*#__PURE__*/_jsxDEV(Button, {\n      className: \"headerButton\",\n      variant: \"contained\",\n      onClick: openPopupModalHandler,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 43\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      className: \"headerButton\",\n      variant: \"contained\",\n      onClick: logoutSessionHandler,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 22\n    }, this), sessionLogged == false && props.isDetailsPage === \"true\" ? /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/bookshow/\" + props.id,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: \"headerButton\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => setOpen(!loginModelState),\n        children: \"Book Show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 21\n    }, this) : \"\", sessionLogged == true && props.isDetailsPage === \"true\" ? /*#__PURE__*/_jsxDEV(Button, {\n      className: \"headerButton\",\n      variant: \"contained\",\n      color: \"primary\",\n      children: \"Book Show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 21\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: loginModelState,\n      className: \"modal\",\n      onRequestClose: closePopupModalHandler,\n      ariaHideApp: false,\n      children: [/*#__PURE__*/_jsxDEV(Tabs, {\n        textColor: \"secondary\",\n        indicatorColor: \"secondary\",\n        value: value,\n        onChange: tabsHandler,\n        children: [\"//default tab login\", /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"LOGIN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"REGISTER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: value,\n        index: 0,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"formC\",\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"username\",\n            type: \"text\",\n            username: username,\n            onChange: userNameHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            className: unameReq,\n            children: \"required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            className: \"formC\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"logpassword\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              autoComplete: \"off\",\n              id: \"logpassword\",\n              type: \"password\",\n              logpassword: logpassword,\n              onChange: passwordChangeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              className: passwordReq,\n              children: \"required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this), loginSuccess == 1 ? /*#__PURE__*/_jsxDEV(Typography, {\n          className: \"logRegMessage\",\n          children: \"Unsuccessful Login Attempt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(Button, {\n          className: \"modalButton\",\n          color: \"primary\",\n          variant: \"contained\",\n          onClick: loginAuthenticationHandler,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: value,\n        index: 1,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"formC\",\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"firstname\",\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"firstname\",\n            type: \"text\",\n            firstname: firstname,\n            onChange: firstNameHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            className: fnameReq,\n            children: \"required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"formC\",\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"lastname\",\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"lastname\",\n            type: \"text\",\n            lastname: lastname,\n            onChange: lastNameHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            className: lnameReq,\n            children: \"required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"formC\",\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"email\",\n            type: \"email\",\n            email: email,\n            onChange: emailHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            className: emailReq,\n            children: \"required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            className: \"formC\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"regPassword\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              autoComplete: \"off\",\n              id: \"regPassword\",\n              type: \"password\",\n              regpassword: regPassword,\n              onChange: regPasswordHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              className: regPasswordReq,\n              children: \"required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"formC\",\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"contact\",\n            children: \"Contact No.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"contact\",\n            type: \"text\",\n            contact: contact,\n            onChange: contactHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            className: contactReq,\n            children: \"required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }, this), registerSuccess == 2 ? /*#__PURE__*/_jsxDEV(Typography, {\n          className: \"logRegMessage\",\n          children: \"Registration Successful. Please Login!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 25\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(Button, {\n          className: \"modalButton\",\n          color: \"primary\",\n          variant: \"contained\",\n          onClick: registerUserHandler,\n          children: \"REGISTER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Header, \"zLQGmVaIPR8m/ieC11PFcvJyz3g=\");\n\n_c = Header;\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index\n  } = props; //console.log(value,index,children)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: value === index && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 295,\n    columnNumber: 12\n  }, this);\n}\n\n_c2 = TabPanel;\nexport default Header;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"TabPanel\");","map":{"version":3,"sources":["/Users/samiksharana/Downloads/book-movie-app/src/common/header/Header.js"],"names":["React","useState","Button","Paper","Tabs","Tab","FormControl","InputLabel","Input","FormHelperText","Typography","Modal","Link","Header","props","loginModelState","setOpen","value","setVal","sessionLogged","setSessionState","sessionStorage","getItem","username","setUserName","logpassword","setPassword","firstname","setFirstName","lastname","setLastName","email","setEmail","regPassword","setRegPassword","contact","setContact","unameReq","setCNameForUname","passwordReq","setCNameforPassword","fnameReq","setCNameforFName","lnameReq","setCNameforLName","emailReq","setCNameforEmail","regPasswordReq","setCNameforRegPassword","contactReq","setCNameforContact","loginSuccess","setLoginSuccess","registerSuccess","setRegisterSuccess","tabsHandler","e","val","logoutSessionHandler","removeItem","openPopupModalHandler","closePopupModalHandler","userNameHandler","target","passwordChangeHandler","firstNameHandler","lastNameHandler","emailHandler","regPasswordHandler","contactHandler","loginAuthenticationHandler","dataLog","preventDefault","console","log","window","btoa","fetch","baseUrl","method","headers","Accept","Authorization","body","then","response","json","data","message","setItem","id","catch","error","alert","registerUserHandler","registerData","JSON","stringify","email_address","first_name","last_name","mobile_number","password","logo","isDetailsPage","TabPanel","children","index"],"mappings":"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","sourcesContent":["import React,{ useState } from \"react\";\nimport \"./Header.css\"\nimport logo from \"../../assets/logo.svg\"\nimport {Button,Paper,Tabs,Tab,FormControl,InputLabel,Input, FormHelperText, Typography} from \"@material-ui/core\"\nimport Modal from \"react-modal\"\nimport { Link } from \"react-router-dom\";\n\nconst Header = (props) =>{ \n\n        const [loginModelState,setOpen] = useState(false);\n        const [value,setVal] =useState(0);\n        const [sessionLogged, setSessionState] = useState(sessionStorage.getItem(\"access-token\")== null ? false : true);\n\n        //Login \n        const [username, setUserName] = useState([]);\n        const [logpassword, setPassword] = useState([]);\n\n        //Register\n        const [firstname, setFirstName] = useState([]);\n        const [lastname, setLastName] = useState([]);\n        const [email, setEmail] = useState([]);\n        const [regPassword, setRegPassword] = useState([]);\n        const [contact, setContact] = useState([]);\n\n        //Required helper text - set classname \n        const [unameReq, setCNameForUname] = useState(\"noneClass\");\n        const [passwordReq, setCNameforPassword] = useState(\"noneClass\");\n        const [fnameReq, setCNameforFName ] =useState(\"noneClass\");\n        const [lnameReq, setCNameforLName] = useState(\"noneClass\");\n        const [emailReq, setCNameforEmail] = useState(\"noneClass\");\n        const [regPasswordReq, setCNameforRegPassword] = useState(\"noneClass\");\n        const [contactReq, setCNameforContact] = useState(\"noneClass\");\n\n        const [loginSuccess, setLoginSuccess] = useState([0]);\n        const [registerSuccess, setRegisterSuccess] = useState([0]);\n\n        const tabsHandler = (e,val) => {\n            //console.warn(val)\n            setVal(val);\n        }\n\n        const logoutSessionHandler = (e) => {\n            sessionStorage.removeItem(\"uuid\");\n            sessionStorage.removeItem(\"access-token\");\n            setSessionState(false);\n        }\n\n        // const directToBookShowPage = (id) => {\n        //     props.history.push('/bookshow/' + id);\n        // }\n\n        const openPopupModalHandler = () => {\n            setOpen(true);\n            setUserName(\"\");\n            setPassword(\"\");\n            setFirstName(\"\");\n            setLastName(\"\");\n            setEmail(\"\");\n            setRegPassword(\"\");\n            setContact(\"\");\n\n            setCNameForUname(\"noneClass\");\n            setCNameforPassword(\"noneClass\");\n            setCNameforFName(\"noneClass\");\n            setCNameforLName(\"noneClass\");\n            setCNameforEmail(\"noneClass\");\n            setCNameforRegPassword(\"noneClass\");\n            setCNameforContact(\"noneClass\");\n\n            setLoginSuccess(0);\n            setRegisterSuccess(0);\n\n        }\n\n        const closePopupModalHandler = () => {\n            setOpen(false);\n            setUserName(\"\");\n            setPassword(\"\");\n            setFirstName(\"\");\n            setLastName(\"\");\n            setEmail(\"\");\n            setRegPassword(\"\");\n            setContact(\"\");\n\n            setCNameForUname(\"noneClass\");\n            setCNameforPassword(\"noneClass\");\n            setCNameforFName(\"noneClass\");\n            setCNameforLName(\"noneClass\");\n            setCNameforEmail(\"noneClass\");\n            setCNameforRegPassword(\"noneClass\");\n            setCNameforContact(\"noneClass\");\n\n            setLoginSuccess(0);\n            setRegisterSuccess(0);\n        }\n\n        const  userNameHandler = (e) => {\n            setUserName( e.target.value);\n        }\n\n        const passwordChangeHandler = (e) => {\n            setPassword(e.target.value);\n        }\n\n        const firstNameHandler = (e) => {\n            setFirstName( e.target.value);\n        }\n\n        const lastNameHandler = (e) => {\n            setLastName( e.target.value);\n        }\n\n        const emailHandler = (e) => {\n            setEmail( e.target.value);\n        }\n\n        const regPasswordHandler = (e) => {\n            setRegPassword( e.target.value);\n        }\n\n        const contactHandler = (e) => {\n            setContact( e.target.value);\n        }\n\n        const loginAuthenticationHandler = (e) => {\n            let dataLog = null;\n            \n            username === \"\" ? setCNameForUname(\"blockClass\") : setCNameForUname(\"noneClass\");\n            //console.log(unameReq)\n            logpassword === \"\" ? setCNameforPassword(\"blockClass\") : setCNameforPassword(\"noneClass\");\n\n            if(username!=null && username!=\"\" && logpassword!=null && logpassword!=\"\"){\n                e.preventDefault();\n                //const loginParameters = window.btoa(username + \":\" + password);\n                console.log(window.btoa(logpassword))\n                \n                fetch(props.baseUrl+\"auth/login\",{\n                    method: \"POST\",\n                    headers: {\n                        Accept: \"application/json\",\n                        \"Content-type\": \"application/json; charset=UTF-8\",\n                        Authorization: \"Basic \" + window.btoa(username+ \":\" +logpassword),\n                        },\n                    body: dataLog,\n                }).then(async(response) => response.json()).then((data) => {\n                    if(!data.message){\n                        closePopupModalHandler();\n                        setUserName(\"\");\n                        setPassword(\"\");\n                        sessionStorage.setItem(\"access-token\",data.id);\n                        setLoginSuccess(2);\n                    }else{\n                        setLoginSuccess(1);\n                    }\n                }).catch((error) => {alert(error)})\n            }\n        }\n\n        const registerUserHandler = async(e) => {\n            firstname === \"\" ? setCNameforFName(\"blockClass\" ) : setCNameforFName(\"noneClass\");\n            lastname === \"\" ? setCNameforLName(\"blockClass\") : setCNameforLName(\"noneClass\");\n            email === \"\" ? setCNameforEmail(\"blockClass\") : setCNameforEmail(\"noneClass\");\n            regPassword === \"\" ? setCNameforRegPassword(\"blockClass\") : setCNameforRegPassword(\"noneClass\");\n            contact === \"\" ? setCNameforContact(\"blockClass\") : setCNameforContact(\"noneClass\");\n            \n            if(firstname!=\"\" && firstname!=null && \n            lastname!=\"\" && lastname!=null && \n            email!=\"\" && email!=null && \n            regPassword!=\"\" && regPassword!=null && \n            contact!=\"\" && contact!=null)\n            {\n                let registerData = JSON.stringify({\n                    email_address:email,\n                    first_name : firstname,\n                    last_name : lastname,  \n                    mobile_number : contact,\n                    password : regPassword\n                })\n                console.log(registerData);\n                e.preventDefault();\n                fetch(props.baseUrl+\"signup\",{\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                            },\n                        body: registerData}).then((response) => response.json()).then((data) => {\n                        if(!data.message){\n                            setRegisterSuccess(2);\n                            //console.log(data.message);\n                        }else{\n                            setRegisterSuccess(1);\n                            console.log(data.message);\n                        }\n                    }).catch((error) =>{\n                        alert(error);\n                    })\n            }        \n        }\n\n        return(\n            <div className=\"header\">\n                <img src={logo} alt=\"logo\" className=\"app-logo\"/>\n                {(sessionLogged==false) ? <Button className=\"headerButton\" variant=\"contained\" onClick={openPopupModalHandler}>Login</Button>\n                   : <Button className=\"headerButton\" variant=\"contained\" onClick={logoutSessionHandler}>Logout</Button>\n                }\n                \n                {\n                    (sessionLogged==false && props.isDetailsPage===\"true\") ?\n                    <Link to={\"/bookshow/\"+props.id}>\n                        <Button className=\"headerButton\" variant=\"contained\" color=\"primary\" onClick={() => setOpen(!loginModelState)}>Book Show</Button> \n                    </Link> : \"\"\n                }\n\n                {\n                    (sessionLogged==true && props.isDetailsPage===\"true\") ?\n                    <Button className=\"headerButton\" variant=\"contained\" color=\"primary\">Book Show</Button> : \"\"\n                }\n\n                <Modal isOpen={loginModelState} className=\"modal\" onRequestClose={closePopupModalHandler} ariaHideApp={false}>\n                        <Tabs textColor=\"secondary\" indicatorColor=\"secondary\" value={value} onChange={tabsHandler}>//default tab login\n                            <Tab label=\"LOGIN\" />\n                            <Tab label=\"REGISTER\" />\n                        </Tabs>\n\n                    <TabPanel value={value} index={0}>\n                    <FormControl className=\"formC\" required>\n                        <InputLabel htmlFor=\"username\">Username</InputLabel>\n                        <Input id=\"username\" type=\"text\" username={username} onChange={userNameHandler}/>\n                        <FormHelperText className={unameReq}>required</FormHelperText>\n                    </FormControl>\n                    <br/>\n                    <form>\n                    <FormControl className=\"formC\" required>\n                        <InputLabel htmlFor=\"logpassword\">Password</InputLabel>\n                        <Input autoComplete=\"off\" id=\"logpassword\" type=\"password\" logpassword={logpassword} onChange={passwordChangeHandler}/>\n                        <FormHelperText className={passwordReq}>required</FormHelperText>\n                    </FormControl></form>\n                    <br/>\n                    <br/>\n                    {loginSuccess==1 ? \n                        <Typography className=\"logRegMessage\">Unsuccessful Login Attempt</Typography>\n                        :\"\"\n                    }\n                    <Button className=\"modalButton\" color=\"primary\" variant=\"contained\" onClick={loginAuthenticationHandler}>Login</Button>\n                    </TabPanel>\n\n                    <TabPanel value={value} index={1}>\n                    <FormControl className=\"formC\" required>\n                        <InputLabel htmlFor=\"firstname\">First Name</InputLabel>\n                        <Input id=\"firstname\" type=\"text\" firstname={firstname} onChange={firstNameHandler}/>\n                        <FormHelperText className={fnameReq}>required</FormHelperText>\n                    </FormControl>\n                    <br/>\n                    <FormControl className=\"formC\" required>\n                        <InputLabel htmlFor=\"lastname\">Last Name</InputLabel>\n                        <Input id=\"lastname\" type=\"text\" lastname={lastname} onChange={lastNameHandler}/>\n                        <FormHelperText className={lnameReq}>required</FormHelperText>\n                    </FormControl>\n                    <br/>\n                    <FormControl className=\"formC\" required>\n                        <InputLabel htmlFor=\"email\">Email</InputLabel>\n                        <Input id=\"email\" type=\"email\" email={email} onChange={emailHandler}/>\n                        <FormHelperText className={emailReq}>required</FormHelperText>\n                    </FormControl>\n                    <br/>\n                    <form>\n                    <FormControl className=\"formC\" required>\n                        <InputLabel htmlFor=\"regPassword\">Password</InputLabel>\n                        <Input autoComplete=\"off\" id=\"regPassword\" type=\"password\" regpassword={regPassword} onChange={regPasswordHandler}/>\n                        <FormHelperText className={regPasswordReq}>required</FormHelperText>\n                    </FormControl>\n                    <br/></form>\n                    <FormControl className=\"formC\" required>\n                        <InputLabel htmlFor=\"contact\">Contact No.</InputLabel>\n                        <Input id=\"contact\" type=\"text\" contact={contact} onChange={contactHandler}/>\n                        <FormHelperText className={contactReq}>required</FormHelperText>\n                    </FormControl>\n                    <br/>\n                    <br/>\n                    {registerSuccess==2 ? \n                        <Typography className=\"logRegMessage\">Registration Successful. Please Login!</Typography>\n                        :\"\"\n                    }\n                    <Button className=\"modalButton\" color=\"primary\" variant=\"contained\" onClick={registerUserHandler}>REGISTER</Button>\n                    \n                    </TabPanel>\n                </Modal>\n            </div>\n        )\n    }\n\nfunction TabPanel(props){\n    const {children,value,index} = props;\n    //console.log(value,index,children)\n    return(<div>\n        {value===index && (\n            <h1>{children}</h1>\n        )}\n    </div>)\n}\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}