{"ast":null,"code":"var _jsxFileName = \"/Users/samiksharana/Downloads/book-movie-app/src/screens/details/Details.js\",\n    _s = $RefreshSig$();\n\nimport { GridList, GridListTile, GridListTileBar, Typography, withStyles } from \"@material-ui/core\";\nimport YouTube from \"react-youtube\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Header from \"../../common/header/Header\";\nimport \"./Details.css\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useStyles = theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    \"& > * + *\": {//marginTop: theme.spacing(1)\n    }\n  },\n  emptyStar: {\n    color: \"white\"\n  }\n});\n\nconst Details = props => {\n  _s();\n\n  let dataMovie = null;\n  const [selectedMovie, setSelectedMovie] = useState({\n    genres: [],\n    trailer_url: \"\"\n  });\n\n  function loadSelectedMovieData() {\n    fetch(props.baseURL + \"movies/\" + props.match.params.id, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\" //   \"Cache-Control\": \"no-cache\",\n\n      },\n      body: dataMovie\n    }).then(response => response.json()).then(response => {\n      setSelectedMovie(response);\n    });\n  }\n\n  useEffect(() => {\n    loadSelectedMovieData();\n  }, []);\n  const opts = {\n    height: '350',\n    width: '740',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1\n    }\n  };\n\n  const directToArtistWikiHandler = url => {\n    window.location = url;\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      isDetailsPage: \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"backToHome\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          underline: \"hover\",\n          className: \"backLink\",\n          children: \"< Back to Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-container1\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: selectedMovie.poster_url,\n          title: selectedMovie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"middle-container\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h2\",\n          children: [selectedMovie.title, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tagStyle\",\n            children: \"Genres: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), \" \", selectedMovie.genres.join(\",\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tagStyle\",\n            children: \"Duration:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), \" \", selectedMovie.duration]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tagStyle\",\n            children: \"Release Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), \" \", new Date(selectedMovie.release_date).toDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tagStyle\",\n            children: \" Rating:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), \" \", selectedMovie.critics_rating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"marginStyle\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tagStyle\",\n              children: \"Plot:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: selectedMovie.wiki_url,\n              children: \"(Wiki Link)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 69\n            }, this), \" \", selectedMovie.storyline]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"marginStyle\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tagStyle\",\n              children: \"Trailer:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(YouTube, {\n            videoId: selectedMovie.trailer_url.split(\"?v=\")[1],\n            opts: opts,\n            onReady: props._onReady\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-container1\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tagStyle\",\n            children: \"Rate this movie: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.root,\n          children: /*#__PURE__*/_jsxDEV(Rating, {\n            name: \"half-rating-read\",\n            defaultValue: 0,\n            precision: 1,\n            onChange: (_, value) => {\n              setRating(value);\n            },\n            emptyIcon: /*#__PURE__*/_jsxDEV(StarBorderIcon, {\n              fontSize: \"inherit\",\n              style: {\n                pointerEvents: 'none'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"marginStyle1\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tagStyle\",\n              children: \"Artists:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GridList, {\n          cellHeight: 180,\n          cols: 2,\n          children: selectedMovie.artists != null && selectedMovie.artists.map(art => /*#__PURE__*/_jsxDEV(GridListTile, {\n            className: \"gridTile\",\n            onClick: () => directToArtistWikiHandler(art.wiki_url),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: art.profile_url,\n              alt: art.first_name + \" \" + art.last_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(GridListTileBar, {\n              title: art.first_name + \" \" + art.last_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 33\n            }, this)]\n          }, art.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Details, \"bszZlQUp8lqAJMcXIw76XyA0FQI=\", false, function () {\n  return [useStyles];\n});\n\n_c = Details;\nexport default withStyles(useStyles)(Details);\n\nvar _c;\n\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"sources":["/Users/samiksharana/Downloads/book-movie-app/src/screens/details/Details.js"],"names":["GridList","GridListTile","GridListTileBar","Typography","withStyles","YouTube","React","useState","useEffect","Link","Header","Rating","StarBorderIcon","useStyles","theme","root","display","flexDirection","emptyStar","color","Details","props","dataMovie","selectedMovie","setSelectedMovie","genres","trailer_url","loadSelectedMovieData","fetch","baseURL","match","params","id","method","headers","body","then","response","json","opts","height","width","playerVars","autoplay","directToArtistWikiHandler","url","window","location","classes","poster_url","title","join","duration","Date","release_date","toDateString","critics_rating","wiki_url","storyline","split","_onReady","_","value","setRating","pointerEvents","artists","map","art","profile_url","first_name","last_name"],"mappings":"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","sourcesContent":["import { GridList, GridListTile, GridListTileBar, Typography, withStyles } from \"@material-ui/core\";\nimport YouTube from \"react-youtube\";\nimport React, { useState,useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Header from \"../../common/header/Header\"\nimport \"./Details.css\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\n\nconst useStyles = theme => ({\n    root: {\n      display: \"flex\",\n      flexDirection: \"column\",\n  \n      \"& > * + *\": {\n        //marginTop: theme.spacing(1)\n      }\n    },\n    emptyStar: {\n      color: \"white\"\n    }\n  });\n\nconst Details = (props) => {\n\n    let dataMovie = null;\n\n    const [selectedMovie,setSelectedMovie] = useState({\n        genres: [],\n        trailer_url : \"\",\n    });\n\n    function loadSelectedMovieData(){\n        fetch(props.baseURL + \"movies/\" + props.match.params.id , {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            //   \"Cache-Control\": \"no-cache\",\n            },\n            body: dataMovie,\n          })  \n          .then((response) => response.json())\n          .then((response) => {\n            setSelectedMovie(response);\n        });\n    }\n\n    useEffect(() => {\n        loadSelectedMovieData();\n    },[]);\n\n    const opts = {\n        height: '350',\n        width: '740',\n        playerVars: {\n          // https://developers.google.com/youtube/player_parameters\n          autoplay: 1,\n        },\n      };\n\n    const directToArtistWikiHandler = (url) => {\n        window.location = url;\n    }\n      \n    const classes = useStyles();\n\n    return(\n        <div>\n            <Header isDetailsPage=\"true\"/>\n            <div className=\"backToHome\">\n                <Typography>\n                    <Link to=\"/\" underline=\"hover\" className=\"backLink\">&lt; Back to Home</Link>\n                </Typography>\n            </div>\n\n            <div className=\"flex-container\">\n                <div className=\"left-container1\">\n                    <img src={selectedMovie.poster_url} title={selectedMovie.title}/>\n                </div>\n\n                <div className=\"middle-container\">\n                    \n                    <Typography variant=\"h5\" component=\"h2\">{selectedMovie.title} </Typography>\n                    <br/>\n                    <Typography>\n                        <span className=\"tagStyle\">Genres: </span> {selectedMovie.genres.join(\",\")}\n                    </Typography>\n                    <Typography>\n                        <span className=\"tagStyle\">Duration:</span> {selectedMovie.duration} \n                    </Typography>\n                    <Typography>\n                        <span className=\"tagStyle\">Release Date:</span> {new Date(selectedMovie.release_date).toDateString()} \n                    </Typography>\n                    <Typography>\n                        <span className=\"tagStyle\"> Rating:</span> {selectedMovie.critics_rating}  \n                    </Typography>\n                    <div className=\"marginStyle\">\n                        <Typography>\n                            <span className=\"tagStyle\">Plot:</span> <a href={selectedMovie.wiki_url}>(Wiki Link)</a> {selectedMovie.storyline} \n                        </Typography>\n                    </div>\n\n                    <div className=\"marginStyle\">\n                        <Typography>\n                            <span className=\"tagStyle\">Trailer:</span>\n                        </Typography>\n                        <YouTube videoId={selectedMovie.trailer_url.split(\"?v=\")[1]}\n                            opts={opts} onReady={props._onReady}/>\n                    </div>\n                </div>\n\n                <div className=\"right-container1\">\n                    <Typography>\n                        <span className=\"tagStyle\">Rate this movie: </span>\n                    </Typography>\n\n                    <div className={classes.root}>\n                        <Rating\n                        name=\"half-rating-read\"\n                        defaultValue={0}\n                        precision={1}\n                        onChange={(_, value) => {\n                            setRating(value);\n                          }}\n                        emptyIcon={<StarBorderIcon fontSize=\"inherit\" style={{pointerEvents: 'none'}} />}\n                        />\n                    </div>\n\n                    <div className=\"marginStyle1\">\n                        <Typography>\n                            <span className=\"tagStyle\">Artists:</span>\n                        </Typography>\n                    </div>\n\n                    <GridList cellHeight={180} cols={2}>\n                        {selectedMovie.artists != null && selectedMovie.artists.map(art => (\n                            <GridListTile\n                                className=\"gridTile\"\n                                onClick={() => directToArtistWikiHandler(art.wiki_url)}\n                                key={art.id}>\n                                <img src={art.profile_url} alt={art.first_name + \" \" + art.last_name} />\n                                <GridListTileBar\n                                    title={art.first_name + \" \" + art.last_name}\n                                />\n                            </GridListTile>\n                        ))}\n                    </GridList>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default withStyles(useStyles)(Details);"]},"metadata":{},"sourceType":"module"}